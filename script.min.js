function EventEmitter() {
	this.events = {};
}

EventEmitter.prototype.on = function(event, listener) {
	if (typeof this.events[event] !== 'object') {
		this.events[event] = [];
	}

	this.events[event].push(listener);
}

EventEmitter.prototype.emit = function (event, parameters) {
	if (typeof this.events[event] !== 'object') return;

	var listeners = this.events[event].slice(),
		length = listeners.length;

	for(var i = 0; i < length; i++) {
		listeners[i].call(this, parameters)
	}
};

// function App() {
// 	this.observers =[];
// 	this.form = new Form(document.querySelector('.form-musician'));
// 	this.list = new List(document.querySelector('.musicians'), this);
// 	this.appEvent = 'appEvent'
// 	this.ctrl = false;
// 	this.shif = false;
// 	this.shiftFromTo = [];
// 	this.init();
// }

// App.prototype = {
// 	init: function () {
// 		this.form.el.addEventListener('click', this.delegationEvent.bind(this));
// 		document.addEventListener('keyup', this.delegationEvent.bind(this));
// 		document.addEventListener('keydown', this.delegationEventCtrlShif.bind(this));
// 		this.list.el.addEventListener('click', this.delegationEvent.bind(this));

// 		this.subscribe(this.form.eventSendVal, this.list.add, this.list);
// 		this.subscribe(this.form.eventSelectAll, this.list.selectUnselectAll, this.list);
// 		this.subscribe(this.appEvent, this.list.render, this.list);
// 		this.subscribe(this.list.eventGetLiForDel, this.form.checkDelBtn, this.form);
// 		this.subscribe(this.form.eventRemove, this.list.remove, this.list);
// 		this.notify(this.appEvent, data);
// 	},

// 	delegationEvent: function (e) {
// 		var target = e.target;

// 		if (target.classList.contains('del-btn')) {
// 			if (!confirm('Selected elements will be deleted. Are you sure?')) return;
// 			this.notify(this.form.eventRemove, this.list.getLiForDel())

// 		} else if (target.classList.contains('select-btn')) {

// 			this.notify(this.form.eventSelectAll)

// 		} else if (target.classList.contains('add-btn') || e.keyCode == 13) {

// 			this.notify(this.form.eventSendVal, this.form.getValue());
// 			this.form.noValue();

// 		} else if (e.keyCode === 17) {

// 			this.ctrl = false;

// 		} else if (e.keyCode === 16) {

// 			this.shif = false;

// 		} else if (target.tagName === 'LI' && this.ctrl) {

// 			this.shiftFromTo[0] = Array.prototype.indexOf.call(target.parentNode.children, target);
// 			this.list.selectLi(target);

// 		} else if (target.tagName === 'LI' && this.shif) {

// 			this.shiftFromTo[1] = Array.prototype.indexOf.call(target.parentNode.children, target);

// 			var firstIndex = this.shiftFromTo[0];
// 			var lastIndex = this.shiftFromTo[1];
			
// 			firstIndex <= lastIndex 
// 				? this.list.selectList(firstIndex, lastIndex) 
// 				: this.list.selectList(lastIndex, firstIndex);

// 		} else if (target.tagName === 'LI') {

// 			this.shiftFromTo[0] = Array.prototype.indexOf.call(target.parentNode.children, target);
// 			this.list.selectOneLi(target);

// 		}


// 		this.notify(this.list.eventGetLiForDel, this.list.checkLi());
	

// 	},

// 	delegationEventCtrlShif: function (e) {
// 		if (e.keyCode === 17) {
// 			this.ctrl = true;
// 		} else if (e.keyCode === 16) {
// 			this.shif = true;
// 		}
// 	},

// 	subscribe: function (event, callback, context) {
// 		var ctx = context || null;
// 	    if (typeof this.observers[event] !== 'object') {
// 			this.observers[event] = [];
// 		}
// 		this.observers[event].push({callback: callback, context: ctx});
// 	},

// 	notify: function(sEventType) {
// 		if (!this.observers[sEventType]) return;
// 		var arg = [].slice.call(arguments, 1)[0];
// 		var observers = this.observers[sEventType];
// 		for(var i = 0; i < observers.length; i++) {
// 			if(observers[i].callback instanceof Function) {
// 				observers[i].callback.call(observers[i].context, arg);
// 			}
// 		}
// 	}
// }



// App = {
//  init: function() {
//   var list = new List();
//   var form = new Form();
//   list.on('selection-change', form.changeButtonState.bind(form));
//  }
// }

function App () {
	this.form = new Form(document.querySelector('.form-musician'));
	this.list = new List(document.querySelector('.musicians'));
	// this.events = new EventEmitter();
	this.init();
}

App.prototype = {
	init: function () {
		// var form = new Form(document.querySelector('.form-musician'));
		// var list = new List(document.querySelector('.musicians'));
		// console.log(form);
		this.form.on('enter-value', this.list.add.bind(this.list));
		// form.on('enter-value', list.add);
	},

	// on: function (event, listener) {
	// 	this.events.on(event, listener);
	// },
	
	// emit: function (event, parameters) {
	// 	this.events.emit(event, parameters);
	// }
}

window.addEventListener('DOMContentLoaded', function(){
	new App();
});

var data = ['John Lennon', 'Gary Moore', 'Steve Vai', 'Ronnie James Dio'];





// function List() {
//  this.events = new EventEmitter();
// }


// List.prototype.setSelected = function(item) {
//  this.selection.push(item);
//  this.events.emit('selection-change', [this.selection]);
// }

// List.prototype.on = function(event, handler) {
//  this.events.on(event, handler)
// }




// function List() {
//  this.events = new EventEmitter();
// }


// List.prototype.setSelected = function(item) {
//  this.selection.push(item);
//  this.events.emit('selection-change', [this.selection]);
// }

// List.prototype.on = function(event, handler) {
//  this.events.on(event, handler)
// }



// App = {
//  init: function() {
//   var list = new List();
//   var form = new Form();
//   list.on('selection-change', form.changeButtonState.bind(form));
//  }
// }

function List(el) {
	if (!el) return;
	this.events = new EventEmitter();
	this.el = el;
	this.init();
}

List.prototype = {
	init: function() {
		console.log('list init');
	},

	on: function (event, listener) {
		this.events.on(event, listener);
	},

	emit: function (event, parameters) {
		this.events.emit(event, parameters);
	},

	add: function () {
		console.log(this);
	}
}








// function List(el) {
// 	if (!el) return;
// 	this.el = el;
// 	this.eventGetLiForDel = 'listGetLiForDel'
// }

// List.prototype = {

// 	add: function (text) {
// 		this.el.insertAdjacentHTML('beforeend', '<li>' + text + '</li>');
// 	},

// 	render: function (data) {
// 		for (var i = 0; i < data.length; i++) {
// 			this.add(data[i]);
// 		}
// 	},

// 	remove: function (element) {
// 		for (var i = 0; i < element.length; i++) {
// 			var el = typeof element[i] == 'string' ? document.querySelector('#' + element[i]) : element[i];
// 			el.parentNode.removeChild(el);
// 		}
// 	},

// 	getLiForDel: function () {
// 		return this.el.querySelectorAll('.for-del');
// 	},

// 	getAllLi: function () {
// 		return this.el.querySelectorAll('li');
// 	},

// 	checkLi: function () {
// 		return this.el.querySelectorAll('.for-del').length !== 0 ? true : false;
// 	},

// 	selectUnselectAll: function () {
// 		this.getAllLi().length !== this.getLiForDel().length ? this.selectAll() : this.unSelectAll();
// 	},

// 	selectAll: function () {
// 		var allLi = this.getAllLi();
// 		for (var i = 0; i < allLi.length; i++) {
// 			allLi[i].classList.add('for-del')
// 		}
// 	},

// 	unSelectAll: function () {
// 		var allLi = this.getAllLi();
// 		for (var i = 0; i < allLi.length; i++) {
// 			allLi[i].classList.remove('for-del');
// 		}
// 	},

// 	selectOneLi: function (element) {
// 		var el = typeof element == 'string' ? document.querySelector('#' + element) : element;
// 		this.unSelectAll();
// 		this.selectLi(el);
// 	},

// 	selectLi: function (element) {
// 		var el = typeof element == 'string' ? document.querySelector('#' + element) : element;
// 		el.classList.toggle('for-del');
// 	},

// 	selectList: function (firstEl, lastEl) {
// 		this.unSelectAll();
// 		var lis = this.getAllLi();
// 		for (var i = firstEl; i <= lastEl; i++) {
// 			lis[i].classList.add('for-del');
// 		}
// 	}
// }



// App = {
//  init: function() {
//   var list = new List();
//   var form = new Form();
//   list.on('selection-change', form.changeButtonState.bind(form));
//  }
// }

// function List() {
//  this.events = new EventEmitter();
// }


// List.prototype.setSelected = function(item) {
//  this.selection.push(item);
//  this.events.emit('selection-change', [this.selection]);
// }

// List.prototype.on = function(event, handler) {
//  this.events.on(event, handler)
// }




function Form(el) {
	if (!el) return;
	this.events = new EventEmitter();
	this.el = el;
	this.init();
}


Form.prototype = {
	init: function() {
		console.log('form init');
	},

	on: function (event, listener) {
		this.events.on(event, listener);
	},
	
	emit: function (event, parameters) {
		this.events.emit(event, parameters);
	},

	setSelected: function (items) {
		this.section.push(item);
		this.emit('enter-value', [this.section]);
	}
}













// function Form(el) {
// 	if (!el) return;
// 	this.el = el;
// 	this.eventSendVal = 'formSendVal';
// 	this.eventSelectAll = 'formSelectAll';
// 	this.eventRemove = 'formRemove';
// 	this.init();
// }

// Form.prototype = {
// 	init: function () {
// 		this.el.addEventListener('keyup', this.checkAddBtn.bind(this));
// 	},

// 	checkAddBtn: function () {
// 		var btn = this.el.querySelector('.add-btn');
// 		this.checkValue() ? btn.removeAttribute('disabled') : btn.setAttribute('disabled', 'disabled');
// 	},

// 	checkDelBtn: function (check) {
// 		var btn = this.el.querySelector('.del-btn');
// 		check ? btn.removeAttribute('disabled') : btn.setAttribute('disabled', 'disabled');
// 	},

// 	getValue: function () {
// 		return this.el.querySelector('.input').value;
// 	},

// 	noValue: function () {
// 		this.el.querySelector('.input').value = '';
// 		this.checkAddBtn();
// 	},

// 	checkValue: function () {
// 		return this.el.querySelector('.input').value !== '' ? true : false;
// 	}
// }

